version: '3.8'

services:
  webhook-server:
    build:
      context: .
      dockerfile: Dockerfile
    command: node dist/webhook-server/index.js
    ports:
      - "3002:3001"
    environment:
      - NODE_ENV=production
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - RESEND_API_KEY=${RESEND_API_KEY}
      - ASSET_API_KEY=${ASSET_API_KEY}
      - ASSET_WEBHOOK_SECRET=${ASSET_WEBHOOK_SECRET}
      - FROM_EMAIL=${FROM_EMAIL}
      - FROM_NAME=${FROM_NAME}
      - SUPPORT_EMAIL=${SUPPORT_EMAIL}
      - JWT_SECRET=${JWT_SECRET}
      - COOKIE_SECRET=${COOKIE_SECRET}
      - APP_URL=${APP_URL}
      - RATE_LIMIT_WINDOW=${RATE_LIMIT_WINDOW}
      - RATE_LIMIT_MAX_REQUESTS=${RATE_LIMIT_MAX_REQUESTS}
      - CACHE_TTL=${CACHE_TTL}
      - LOG_LEVEL=${LOG_LEVEL}
      - LOG_FORMAT=${LOG_FORMAT}
      - TZ=${TZ}
    depends_on:
      redis:
        condition: service_healthy
    restart: always
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "wget --spider http://localhost:3001/webhook/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - ./logs:/app/logs

  payment-worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: node dist/workers/workers/payment.worker.js
    environment:
      - NODE_ENV=production
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - RESEND_API_KEY=${RESEND_API_KEY}
      - ASSET_API_KEY=${ASSET_API_KEY}
      - ASSET_WEBHOOK_SECRET=${ASSET_WEBHOOK_SECRET}
      - FROM_EMAIL=${FROM_EMAIL}
      - FROM_NAME=${FROM_NAME}
      - SUPPORT_EMAIL=${SUPPORT_EMAIL}
      - JWT_SECRET=${JWT_SECRET}
      - COOKIE_SECRET=${COOKIE_SECRET}
      - APP_URL=${APP_URL}
      - RATE_LIMIT_WINDOW=${RATE_LIMIT_WINDOW}
      - RATE_LIMIT_MAX_REQUESTS=${RATE_LIMIT_MAX_REQUESTS}
      - CACHE_TTL=${CACHE_TTL}
      - LOG_LEVEL=${LOG_LEVEL}
      - LOG_FORMAT=${LOG_FORMAT}
      - TZ=${TZ}
    depends_on:
      redis:
        condition: service_healthy
    restart: always
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "ps aux | grep payment.worker.js || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - ./logs:/app/logs

  email-worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: node dist/workers/workers/email.worker.js
    environment:
      - NODE_ENV=production
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - RESEND_API_KEY=${RESEND_API_KEY}
      - ASSET_API_KEY=${ASSET_API_KEY}
      - ASSET_WEBHOOK_SECRET=${ASSET_WEBHOOK_SECRET}
      - FROM_EMAIL=${FROM_EMAIL}
      - FROM_NAME=${FROM_NAME}
      - SUPPORT_EMAIL=${SUPPORT_EMAIL}
      - JWT_SECRET=${JWT_SECRET}
      - COOKIE_SECRET=${COOKIE_SECRET}
      - APP_URL=${APP_URL}
      - RATE_LIMIT_WINDOW=${RATE_LIMIT_WINDOW}
      - RATE_LIMIT_MAX_REQUESTS=${RATE_LIMIT_MAX_REQUESTS}
      - CACHE_TTL=${CACHE_TTL}
      - LOG_LEVEL=${LOG_LEVEL}
      - LOG_FORMAT=${LOG_FORMAT}
      - TZ=${TZ}
    depends_on:
      redis:
        condition: service_healthy
    restart: always
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "ps aux | grep email.worker.js || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - ./logs:/app/logs

  tracking-worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: node dist/workers/workers/tracking.worker.js
    environment:
      - NODE_ENV=production
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - RESEND_API_KEY=${RESEND_API_KEY}
      - ASSET_API_KEY=${ASSET_API_KEY}
      - ASSET_WEBHOOK_SECRET=${ASSET_WEBHOOK_SECRET}
      - FROM_EMAIL=${FROM_EMAIL}
      - FROM_NAME=${FROM_NAME}
      - SUPPORT_EMAIL=${SUPPORT_EMAIL}
      - JWT_SECRET=${JWT_SECRET}
      - COOKIE_SECRET=${COOKIE_SECRET}
      - APP_URL=${APP_URL}
      - RATE_LIMIT_WINDOW=${RATE_LIMIT_WINDOW}
      - RATE_LIMIT_MAX_REQUESTS=${RATE_LIMIT_MAX_REQUESTS}
      - CACHE_TTL=${CACHE_TTL}
      - LOG_LEVEL=${LOG_LEVEL}
      - LOG_FORMAT=${LOG_FORMAT}
      - TZ=${TZ}
    depends_on:
      redis:
        condition: service_healthy
    restart: always
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "ps aux | grep tracking.worker.js || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - ./logs:/app/logs

  redis:
    image: redis:alpine
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
      - ./logs:/logs
    restart: always
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    command: redis-server --appendonly yes --logfile /logs/redis.log

networks:
  app-network:
    driver: bridge

volumes:
  redis_data:
